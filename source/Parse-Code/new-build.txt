--allow-missing-images=false: If true, indicates that referenced container images that cannot be found locally or in a registry should still be used.
--allow-missing-imagestream-tags=false: If true, indicates that image stream tags that don't exist should still be used.
--allow-missing-template-keys=true: If true, ignore any errors in templates when a field or map key is missing in the template. Only applies to golang and jsonpath output formats.
--binary=false: Instead of expecting a source URL, set the build to expect binary contents. Will disable triggers.
--build-arg=[]: Specify a key-value pair to pass to Docker during the build.
--build-config-map=[]: ConfigMap and destination to use as an input for the build.
--build-secret=[]: Secret and destination to use as an input for the build.
--code=[]: Source code in the build configuration.
--context-dir='': Context directory to be used for the build.
-D: Specify the contents of a Dockerfile to build directly, implies --strategy=docker. Pass '-' to read from STDIN. 
--dockerfile='': Specify the contents of a Dockerfile to build directly, implies --strategy=docker. Pass '-' to read from STDIN.
--dry-run=false: If true, show the result of the operation without performing it.
-e: Specify a key-value pair for an environment variable to set into resulting image.
--env=[]: Specify a key-value pair for an environment variable to set into resulting image.
--env-file=[]: File containing key-value pairs of environment variables to set into each container.
--image=[]: Name of a container image to use as a builder.
-i: Name of an image stream to to use as a builder.
--image-stream=[]: Name of an image stream to to use as a builder.
--insecure-registry=false: If true, indicates that the referenced container images are on insecure registries and should bypass certificate checking
-l: Label to set in all generated resources.
--labels='': Label to set in all generated resources.
--name='': Set name to use for generated build artifacts.
--no-output=false: If true, the build output will not be pushed anywhere.
-o: Output format. One of json|yaml|name|go-template|go-template-file|template|templatefile|jsonpath|jsonpath-as-json|jsonpath-file.
--output='': Output format. One of json|yaml|name|go-template|go-template-file|template|templatefile|jsonpath|jsonpath-as-json|jsonpath-file.
--output-version='': The preferred API versions of the output objects
--push-secret='': The name of an existing secret that should be used for pushing the output image.
-a: When printing, show all resources (default hide terminated pods.)
--show-all=false: When printing, show all resources (default hide terminated pods.)
--show-labels=false: When printing, show all labels as the last column (default hide labels column)
--show-managed-fields=false: If true, keep the managedFields when printing objects in JSON or YAML format.
--source-image='': Specify an image to use as source for the build.  You must also specify --source-image-path.
--source-image-path='': Specify the file or directory to copy from the source image and its destination in the build directory. Format [source][destination-dir].
--source-secret='': The name of an existing secret that should be used for cloning a private git repository.
--strategy=: Specify the build strategy to use if you don't want to detect (docker|pipeline|source). 
--template='': Template string or path to template file to use when -o=go-template, -o=go-template-file. The template format is golang templates [http//golang.org/pkg/text/template/#pkg-overview].
--to='': Push built images to this image stream tag (or container image repository if --to-docker is set).
--to-docker=false: If true, have the build output push to a Docker repository.