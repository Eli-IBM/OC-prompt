--allow-missing-template-keys=true: If true, ignore any errors in templates when a field or map key is missing in the template. Only applies to golang and jsonpath output formats.
--dry-run='none': Must be 'none', 'server', or 'client'. If client strategy, only print the object that would be sent, without sending it. If server strategy, submit server-side request without persisting the resource.
--field-manager='kubectl-patch': Name of the manager used to track field ownership.
-f: Filename, directory, or URL to files identifying the resource to update
--filename=[]: Filename, directory, or URL to files identifying the resource to update
-k: Process the kustomization directory. This flag can't be used together with -f or -R.
--kustomize='': Process the kustomization directory. This flag can't be used together with -f or -R.
--local=false: If true, patch will operate on the content of the file, not the server-side resource.
-o: Output format. One of json|yaml|name|go-template|go-template-file|template|templatefile|jsonpath|jsonpath-as-json|jsonpath-file.
--output='': Output format. One of json|yaml|name|go-template|go-template-file|template|templatefile|jsonpath|jsonpath-as-json|jsonpath-file.
-p: The patch to be applied to the resource JSON file.
--patch='': The patch to be applied to the resource JSON file.
--patch-file='': A file containing a patch to be applied to the resource.
-R: Process the directory used in -f, --filename recursively. Useful when you want to manage related manifests organized within the same directory.
--recursive=false: Process the directory used in -f, --filename recursively. Useful when you want to manage related manifests organized within the same directory.
--show-managed-fields=false: If true, keep the managedFields when printing objects in JSON or YAML format.
--template='': Template string or path to template file to use when -o=go-template, -o=go-template-file. The template format is golang templates [http//golang.org/pkg/text/template/#pkg-overview].
--type='strategic': The type of patch being provided; one of [json merge strategic]