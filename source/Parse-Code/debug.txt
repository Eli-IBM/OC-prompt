--allow-missing-template-keys=true:If true, ignore any errors in templates when a field or map key is missing in the template. Only applies to golang and jsonpath output formats.
--as-root=false:If true, try to run the container as the root user
--as-user=-1:Try to run the container as a specific user UID (note admins may limit your ability to use this flag)
-c:Container name; defaults to first container
--container='':Container name; defaults to first container
--dry-run='none':Must be 'none', 'server', or 'client'. If client strategy, only print the object that would be sent, without sending it. If server strategy, submit server-side request without persisting the resource.
-f:Filename, directory, or URL to files to read a template
--filename=[]:Filename, directory, or URL to files to read a template
--image='':Override the image used by the targeted container.
--image-stream='':Specify an image stream (namespace/nametag) containing a debug image to run.
--keep-annotations=false:If true, keep the original pod annotations
--keep-init-containers=true:Run the init containers for the pod. Defaults to true.
--keep-labels=false:If true, keep the original pod labels
--keep-liveness=false:If true, keep the original pod liveness probes
--keep-readiness=false:If true, keep the original pod readiness probes
--keep-startup=false:If true, keep the original startup probes
-k:Process the kustomization directory. This flag can't be used together with -f or -R.
--kustomize='':Process the kustomization directory. This flag can't be used together with -f or -R.
-I:Disable pseudo-terminal allocation
--no-stdin=false:Bypasses passing STDIN to the container, defaults to true if no command specified
-T:Disable pseudo-terminal allocation
--no-tty=false:Disable pseudo-terminal allocation
--node-name='':Set a specific node to run on - by default the pod will run on any valid node
--one-container=false:If true, run only the selected container, remove all others
-o:Output format. One of json|yaml|name|go-template|go-template-file|template|templatefile|jsonpath|jsonpath-as-json|jsonpath-file.
--output='':Output format. One of json|yaml|name|go-template|go-template-file|template|templatefile|jsonpath|jsonpath-as-json|jsonpath-file.
--preserve-pod=false:If true, the pod will not be deleted after the debug command exits.
-q:No informational messages will be printed.
--quiet=false:No informational messages will be printed.
-R:Process the directory used in -f, --filename recursively. Useful when you want to manage related manifests organized within the same directory.
--recursive=false:Process the directory used in -f, --filename recursively. Useful when you want to manage related manifests organized within the same directory.
--show-labels=false:When printing, show all labels as the last column (default hide labels column)
--show-managed-fields=false:If true, keep the managedFields when printing objects in JSON or YAML format.
--template='':Template string or path to template file to use when -o=go-template, -o=go-template-file. The template format is golang templates [http//golang.org/pkg/text/template/#pkg-overview].
--to-namespace='':Override the namespace to create the pod into (instead of using --namespace).
-t:Force a pseudo-terminal to be allocated
--tty=false:Force a pseudo-terminal to be allocated