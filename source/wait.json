{
    "--all=false": {
        "Text": "--all=false",
        "Description": "Select all resources in the namespace of the specified resource types"
    },
    "-A": {
        "Text": "-A",
        "Description": "If present, list the requested object(s) across all namespaces. Namespace in current context is ignored even if specified with --namespace."
    },
    "--all-namespaces=false": {
        "Text": "--all-namespaces=false",
        "Description": "If present, list the requested object(s) across all namespaces. Namespace in current context is ignored even if specified with --namespace."
    },
    "--allow-missing-template-keys=true": {
        "Text": "--allow-missing-template-keys=true",
        "Description": "If true, ignore any errors in templates when a field or map key is missing in the template. Only applies to golang and jsonpath output formats."
    },
    "--field-selector=''": {
        "Text": "--field-selector=''",
        "Description": "Selector (field query) to filter on, supports '=', '==', and '!='.(e.g. --field-selector key1=value1,key2=value2). The server only supports a limited number of field queries per type."
    },
    "-f": {
        "Text": "-f",
        "Description": "identifying the resource."
    },
    "--filename=[]": {
        "Text": "--filename=[]",
        "Description": "identifying the resource."
    },
    "--for=''": {
        "Text": "--for=''",
        "Description": "The condition to wait on [delete|condition=condition-name|jsonpath='{JSONPath expression}'=JSONPath Condition]. The default status value of condition-name is true, you can set false with condition=condition-name=false."
    },
    "--local=false": {
        "Text": "--local=false",
        "Description": "If true, annotation will NOT contact api-server but run locally."
    },
    "-o": {
        "Text": "-o",
        "Description": "Output format. One of json|yaml|name|go-template|go-template-file|template|templatefile|jsonpath|jsonpath-as-json|jsonpath-file."
    },
    "--output=''": {
        "Text": "--output=''",
        "Description": "Output format. One of json|yaml|name|go-template|go-template-file|template|templatefile|jsonpath|jsonpath-as-json|jsonpath-file."
    },
    "-R": {
        "Text": "-R",
        "Description": "Process the directory used in -f, --filename recursively. Useful when you want to manage related manifests organized within the same directory."
    },
    "--recursive=true": {
        "Text": "--recursive=true",
        "Description": "Process the directory used in -f, --filename recursively. Useful when you want to manage related manifests organized within the same directory."
    },
    "-l": {
        "Text": "-l",
        "Description": "Selector (label query) to filter on, supports '=', '==', and '!='.(e.g. -l key1=value1,key2=value2)"
    },
    "--selector=''": {
        "Text": "--selector=''",
        "Description": "Selector (label query) to filter on, supports '=', '==', and '!='.(e.g. -l key1=value1,key2=value2)"
    },
    "--show-managed-fields=false": {
        "Text": "--show-managed-fields=false",
        "Description": "If true, keep the managedFields when printing objects in JSON or YAML format."
    },
    "--template=''": {
        "Text": "--template=''",
        "Description": "Template string or path to template file to use when -o=go-template, -o=go-template-file. The template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview]."
    },
    "--timeout=30s": {
        "Text": "--timeout=30s",
        "Description": "The length of time to wait before giving up.  Zero means check once and don't wait, negative means wait for a week."
    }
}