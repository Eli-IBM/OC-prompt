{
    "-A": {
        "Text": "-A",
        "Description": " If true, list the requested object(s) across all projects. Project in current context is ignored."
    },
    "--all-namespaces=false": {
        "Text": "--all-namespaces=false",
        "Description": " If true, list the requested object(s) across all projects. Project in current context is ignored."
    },
    "--allow-missing-template-keys=true": {
        "Text": "--allow-missing-template-keys=true",
        "Description": " If true, ignore any errors in templates when a field or map key is missing in the template. Only applies to golang and jsonpath output formats."
    },
    "-d": {
        "Text": "-d",
        "Description": " A command to run when resources are deleted. Specify multiple times to add arguments."
    },
    "--delete=''": {
        "Text": "--delete=''",
        "Description": " A command to run when resources are deleted. Specify multiple times to add arguments."
    },
    "--exit-after=0s": {
        "Text": "--exit-after=0s",
        "Description": " Exit with status code 0 after the provided duration, optional."
    },
    "--listen-addr=''": {
        "Text": "--listen-addr=''",
        "Description": " The name of an interface to listen on to expose metrics and health checking."
    },
    "--maximum-errors=20": {
        "Text": "--maximum-errors=20",
        "Description": " Exit after this many errors have been detected with. May be set to -1 for no maximum."
    },
    "--names=''": {
        "Text": "--names=''",
        "Description": " A command that will list all of the currently known names, optional. Specify multiple times to add arguments. Use to get notifications when objects are deleted."
    },
    "--object-env-var=''": {
        "Text": "--object-env-var=''",
        "Description": " The name of an env var to serialize the object to when calling the command, optional."
    },
    "--once=false": {
        "Text": "--once=false",
        "Description": " If true, exit with a status code 0 after all current objects have been processed."
    },
    "-o": {
        "Text": "-o",
        "Description": " Output format. One of go-template|go-template-file|template|templatefile|jsonpath|jsonpath-as-json|jsonpath-file."
    },
    "--output='jsonpath'": {
        "Text": "--output='jsonpath'",
        "Description": " Output format. One of go-template|go-template-file|template|templatefile|jsonpath|jsonpath-as-json|jsonpath-file."
    },
    "--print-metrics-on-exit=false": {
        "Text": "--print-metrics-on-exit=false",
        "Description": " If true, on exit write all metrics to stdout."
    },
    "-q": {
        "Text": "-q",
        "Description": " If true, skip printing information about each event prior to executing the command."
    },
    "--quiet=false": {
        "Text": "--quiet=false",
        "Description": " If true, skip printing information about each event prior to executing the command."
    },
    "--resync-period=0s": {
        "Text": "--resync-period=0s",
        "Description": " When non-zero, periodically reprocess every item from the server as a Sync event. Use to ensure external systems are kept up to date."
    },
    "--retry-count=2": {
        "Text": "--retry-count=2",
        "Description": " The number of times to retry a failing command before continuing."
    },
    "--retry-on-exit-code=0": {
        "Text": "--retry-on-exit-code=0",
        "Description": " If any command returns this exit code, retry up to --retry-count times."
    },
    "-l": {
        "Text": "-l",
        "Description": " Selector (label query) to filter on, supports \"=\", \"==\", and \"!=\".(e.g. -l key1=value1,key2=value2)"
    },
    "--selector=''": {
        "Text": "--selector=''",
        "Description": " Selector (label query) to filter on, supports \"=\", \"==\", and \"!=\".(e.g. -l key1=value1,key2=value2)"
    },
    "--template=''": {
        "Text": "--template=''",
        "Description": " Template string or path to template file to use when -o=go-template, -o=go-template-file. The template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview]."
    },
    "--type-env-var=''": {
        "Text": "--type-env-var=''",
        "Description": " The name of an env var to set with the type of event received (\"Sync\", \"Updated\", \"Deleted\", \"Added\") to the reaction command or --delete."
    }
}