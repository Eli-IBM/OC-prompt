{
    "Usage": "oc process (TEMPLATE | -f FILENAME) [-p=KEY=VALUE] [flags]",
    "Arguments": {
        "--allow-missing-template-keys=true": {
            "Text": "--allow-missing-template-keys=true",
            "Description": "If true, ignore any errors in templates when a field or map key is missing in the template. Only applies to golang and jsonpath output formats."
        },
        "-f": {
            "Text": "-f",
            "Description": "Filename or URL to file to read a template"
        },
        "--filename=''": {
            "Text": "--filename=''",
            "Description": "Filename or URL to file to read a template"
        },
        "--ignore-unknown-parameters=false": {
            "Text": "--ignore-unknown-parameters=false",
            "Description": "If true, will not stop processing if a provided parameter does not exist in the template."
        },
        "-l": {
            "Text": "-l",
            "Description": "Label to set in all resources for this template"
        },
        "--labels=''": {
            "Text": "--labels=''",
            "Description": "Label to set in all resources for this template"
        },
        "--local=false": {
            "Text": "--local=false",
            "Description": "If true process the template locally instead of contacting the server."
        },
        "-o": {
            "Text": "-o",
            "Description": "Output format. One of json|yaml|name|describe|go-template-file|templatefile|template|go-template|jsonpath|jsonpath-file."
        },
        "--output=''": {
            "Text": "--output=''",
            "Description": "Output format. One of json|yaml|name|describe|go-template-file|templatefile|template|go-template|jsonpath|jsonpath-file."
        },
        "-p": {
            "Text": "-p",
            "Description": "Specify a key-value pair (eg. -p FOO=BAR) to set/override a parameter value in the template."
        },
        "--param=[]": {
            "Text": "--param=[]",
            "Description": "Specify a key-value pair (eg. -p FOO=BAR) to set/override a parameter value in the template."
        },
        "--param-file=[]": {
            "Text": "--param-file=[]",
            "Description": "File containing template parameter values to set/override in the template."
        },
        "--parameters=false": {
            "Text": "--parameters=false",
            "Description": "If true, do not process but only print available parameters"
        },
        "--raw=false": {
            "Text": "--raw=false",
            "Description": "If true, output the processed template instead of the template\"s objects. Implied by -o describe"
        },
        "--show-managed-fields=false": {
            "Text": "--show-managed-fields=false",
            "Description": "If true, keep the managedFields when printing objects in JSON or YAML format."
        },
        "--template=''": {
            "Text": "--template=''",
            "Description": "Template string or path to template file to use when -o=go-template, -o=go-template-file. The template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview]."
        }
    }
}