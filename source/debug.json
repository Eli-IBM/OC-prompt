{
    "--allow-missing-template-keys=true": {
        "Text": "--allow-missing-template-keys=true",
        "Description": "If true, ignore any errors in templates when a field or map key is missing in the template. Only applies to golang and jsonpath output formats."
    },
    "--as-root=false": {
        "Text": "--as-root=false",
        "Description": "If true, try to run the container as the root user"
    },
    "--as-user=-1": {
        "Text": "--as-user=-1",
        "Description": "Try to run the container as a specific user UID (note admins may limit your ability to use this flag)"
    },
    "-c": {
        "Text": "-c",
        "Description": "Container name; defaults to first container"
    },
    "--container=''": {
        "Text": "--container=''",
        "Description": "Container name; defaults to first container"
    },
    "--dry-run='none'": {
        "Text": "--dry-run='none'",
        "Description": "Must be 'none', 'server', or 'client'. If client strategy, only print the object that would be sent, without sending it. If server strategy, submit server-side request without persisting the resource."
    },
    "-f": {
        "Text": "-f",
        "Description": "Filename, directory, or URL to files to read a template"
    },
    "--filename=[]": {
        "Text": "--filename=[]",
        "Description": "Filename, directory, or URL to files to read a template"
    },
    "--image=''": {
        "Text": "--image=''",
        "Description": "Override the image used by the targeted container."
    },
    "--image-stream=''": {
        "Text": "--image-stream=''",
        "Description": "Specify an image stream (namespace/name:tag) containing a debug image to run."
    },
    "--keep-annotations=false": {
        "Text": "--keep-annotations=false",
        "Description": "If true, keep the original pod annotations"
    },
    "--keep-init-containers=true": {
        "Text": "--keep-init-containers=true",
        "Description": "Run the init containers for the pod. Defaults to true."
    },
    "--keep-labels=false": {
        "Text": "--keep-labels=false",
        "Description": "If true, keep the original pod labels"
    },
    "--keep-liveness=false": {
        "Text": "--keep-liveness=false",
        "Description": "If true, keep the original pod liveness probes"
    },
    "--keep-readiness=false": {
        "Text": "--keep-readiness=false",
        "Description": "If true, keep the original pod readiness probes"
    },
    "--keep-startup=false": {
        "Text": "--keep-startup=false",
        "Description": "If true, keep the original startup probes"
    },
    "-k": {
        "Text": "-k",
        "Description": "Process the kustomization directory. This flag can't be used together with -f or -R."
    },
    "--kustomize=''": {
        "Text": "--kustomize=''",
        "Description": "Process the kustomization directory. This flag can't be used together with -f or -R."
    },
    "-I": {
        "Text": "-I",
        "Description": "Disable pseudo-terminal allocation"
    },
    "--no-stdin=false": {
        "Text": "--no-stdin=false",
        "Description": "Bypasses passing STDIN to the container, defaults to true if no command specified"
    },
    "-T": {
        "Text": "-T",
        "Description": "Disable pseudo-terminal allocation"
    },
    "--no-tty=false": {
        "Text": "--no-tty=false",
        "Description": "Disable pseudo-terminal allocation"
    },
    "--node-name=''": {
        "Text": "--node-name=''",
        "Description": "Set a specific node to run on - by default the pod will run on any valid node"
    },
    "--one-container=false": {
        "Text": "--one-container=false",
        "Description": "If true, run only the selected container, remove all others"
    },
    "-o": {
        "Text": "-o",
        "Description": "Output format. One of json|yaml|name|go-template|go-template-file|template|templatefile|jsonpath|jsonpath-as-json|jsonpath-file."
    },
    "--output=''": {
        "Text": "--output=''",
        "Description": "Output format. One of json|yaml|name|go-template|go-template-file|template|templatefile|jsonpath|jsonpath-as-json|jsonpath-file."
    },
    "--preserve-pod=false": {
        "Text": "--preserve-pod=false",
        "Description": "If true, the pod will not be deleted after the debug command exits."
    },
    "-q": {
        "Text": "-q",
        "Description": "No informational messages will be printed."
    },
    "--quiet=false": {
        "Text": "--quiet=false",
        "Description": "No informational messages will be printed."
    },
    "-R": {
        "Text": "-R",
        "Description": "Process the directory used in -f, --filename recursively. Useful when you want to manage related manifests organized within the same directory."
    },
    "--recursive=false": {
        "Text": "--recursive=false",
        "Description": "Process the directory used in -f, --filename recursively. Useful when you want to manage related manifests organized within the same directory."
    },
    "--show-labels=false": {
        "Text": "--show-labels=false",
        "Description": "When printing, show all labels as the last column (default hide labels column)"
    },
    "--show-managed-fields=false": {
        "Text": "--show-managed-fields=false",
        "Description": "If true, keep the managedFields when printing objects in JSON or YAML format."
    },
    "--template=''": {
        "Text": "--template=''",
        "Description": "Template string or path to template file to use when -o=go-template, -o=go-template-file. The template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview]."
    },
    "--to-namespace=''": {
        "Text": "--to-namespace=''",
        "Description": "Override the namespace to create the pod into (instead of using --namespace)."
    },
    "-t": {
        "Text": "-t",
        "Description": "Force a pseudo-terminal to be allocated"
    },
    "--tty=false": {
        "Text": "--tty=false",
        "Description": "Force a pseudo-terminal to be allocated"
    }
}